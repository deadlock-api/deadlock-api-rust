use haste::entities::fkey_from_path;
use haste::fxhash;

pub(crate) const CONTROLLER_HASH: u64 = fxhash::hash_bytes(b"m_hController");
pub(crate) const PAWN_HASH: u64 = fxhash::hash_bytes(b"m_hPawn");
pub(crate) const STEAM_ID_HASH: u64 = fxhash::hash_bytes(b"m_steamID");
pub(crate) const STEAM_NAME_HASH: u64 = fxhash::hash_bytes(b"m_iszPlayerName");
pub(crate) const HERO_BUILD_ID_HASH: u64 = fxhash::hash_bytes(b"m_unHeroBuildID");
pub(crate) const LEVEL_HASH: u64 = fxhash::hash_bytes(b"m_nLevel");
pub(crate) const TEAM_HASH: u64 = fxhash::hash_bytes(b"m_iTeamNum");
pub(crate) const HEALTH_HASH: u64 = fxhash::hash_bytes(b"m_iHealth");
pub(crate) const MAX_HEALTH_HASH: u64 = fxhash::hash_bytes(b"m_iMaxHealth");
pub(crate) const HERO_ID_HASH: u64 = fxhash::hash_bytes(b"m_nHeroID");
pub(crate) const PLAYER_SLOT_HASH: u64 = fxhash::hash_bytes(b"m_unLobbyPlayerSlot");
pub(crate) const ASSIGNED_LANE_HASH: u64 = fxhash::hash_bytes(b"m_nAssignedLane");
pub(crate) const ORIGINAL_ASSIGNED_LANE_HASH: u64 =
    fxhash::hash_bytes(b"m_nOriginalLaneAssignment");
pub(crate) const NET_WORTH_HASH: u64 = fxhash::hash_bytes(b"m_iGoldNetWorth");
pub(crate) const HEALTH_REGEN_HASH: u64 = fxhash::hash_bytes(b"m_flHealthRegen");
pub(crate) const ULTIMATE_TRAINED_HASH: u64 = fxhash::hash_bytes(b"m_bUltimateTrained");
pub(crate) const KILLS_HASH: u64 = fxhash::hash_bytes(b"m_iPlayerKills");
pub(crate) const ASSISTS_HASH: u64 = fxhash::hash_bytes(b"m_iPlayerAssists");
pub(crate) const DEATHS_HASH: u64 = fxhash::hash_bytes(b"m_iDeaths");
pub(crate) const DENIES_HASH: u64 = fxhash::hash_bytes(b"m_iDenies");
pub(crate) const LAST_HITS_HASH: u64 = fxhash::hash_bytes(b"m_iLastHits");
pub(crate) const HERO_HEALING_HASH: u64 = fxhash::hash_bytes(b"m_iHeroHealing");
pub(crate) const SELF_HEALING_HASH: u64 = fxhash::hash_bytes(b"m_iSelfHealing");
pub(crate) const HERO_DAMAGE_HASH: u64 = fxhash::hash_bytes(b"m_iHeroDamage");
pub(crate) const OBJECTIVE_DAMAGE_HASH: u64 = fxhash::hash_bytes(b"m_iObjectiveDamage");
pub(crate) const ULTIMATE_COOLDOWN_END_HASH: u64 = fxhash::hash_bytes(b"m_flUltimateCooldownEnd");
pub(crate) const UPGRADES_HASH: u64 = fxhash::hash_bytes(b"m_vecUpgrades");
pub(crate) const CREATE_TIME_HASH: u64 = fxhash::hash_bytes(b"m_flCreateTime");
pub(crate) const LANE_HASH: u64 = fxhash::hash_bytes(b"m_iLane");
pub(crate) const SHIELD_ACTIVE_HASH: u64 = fxhash::hash_bytes(b"m_bShieldActive");
pub(crate) const CX: u64 = fkey_from_path(&["CBodyComponent", "m_cellX"]);
pub(crate) const CY: u64 = fkey_from_path(&["CBodyComponent", "m_cellY"]);
pub(crate) const CZ: u64 = fkey_from_path(&["CBodyComponent", "m_cellZ"]);
pub(crate) const VX: u64 = fkey_from_path(&["CBodyComponent", "m_vecX"]);
pub(crate) const VY: u64 = fkey_from_path(&["CBodyComponent", "m_vecY"]);
pub(crate) const VZ: u64 = fkey_from_path(&["CBodyComponent", "m_vecZ"]);
