name: Rust CI/CD

on:
  push:
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag to push (e.g., v1.0.0, specific-feature)'
        required: true
        type: string

env:
  RUST_TOOLCHAIN: stable
  CARGO_TERM_COLOR: always
  DEPOT_PROJECT_ID: k7kl7zsmcs
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  CARGO_INCREMENTAL: 0

permissions:
  contents: read # Needed to checkout the code
  packages: write # Needed to push Docker images to GHCR

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build_test_lint_deploy:
    name: Build, Test, Lint & Deploy
    runs-on: ubuntu-24.04-arm

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Protocol Buffers compiler
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends protobuf-compiler libprotobuf-dev

      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt, clippy

      - name: Set up Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Check formatting (cargo fmt)
        run: cargo fmt --all -- --check

      - name: Lint code (cargo clippy)
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Build project
        run: cargo build

      - name: Run tests
        run: cargo test

      - name: Determine Docker Tag
        if: (github.event_name == 'push' && github.ref == 'refs/heads/master') || github.event_name == 'workflow_dispatch'
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "DOCKER_TAG=${{ inputs.tag }}" >> $GITHUB_ENV
          else # Must be push to main
            echo "DOCKER_TAG=latest" >> $GITHUB_ENV
          fi
          echo "Using Docker tag: $DOCKER_TAG"

      - name: Set up QEMU
        if: env.DOCKER_TAG != ''
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        if: env.DOCKER_TAG != ''
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry (GHCR)
        if: env.DOCKER_TAG != ''
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image
        if: env.DOCKER_TAG != ''
        uses: docker/build-push-action@v6
        with:
          platforms: linux/arm64
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.DOCKER_TAG }}
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=gha,mode=max
          cache-to: type=gha,mode=max
